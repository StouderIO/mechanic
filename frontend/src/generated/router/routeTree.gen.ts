/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './../../routes/__root'
import { Route as PathlessLayoutRouteRouteImport } from './../../routes/_pathlessLayout/route'
import { Route as PathlessLayoutIndexRouteImport } from './../../routes/_pathlessLayout/index'
import { Route as AuthLoginRouteImport } from './../../routes/auth/login'
import { Route as PathlessLayoutKeysRouteRouteImport } from './../../routes/_pathlessLayout/keys/route'
import { Route as PathlessLayoutClusterRouteRouteImport } from './../../routes/_pathlessLayout/cluster/route'
import { Route as PathlessLayoutBucketsRouteRouteImport } from './../../routes/_pathlessLayout/buckets/route'
import { Route as PathlessLayoutAdminTokensRouteRouteImport } from './../../routes/_pathlessLayout/admin-tokens/route'
import { Route as PathlessLayoutKeysIndexRouteImport } from './../../routes/_pathlessLayout/keys/index'
import { Route as PathlessLayoutClusterIndexRouteImport } from './../../routes/_pathlessLayout/cluster/index'
import { Route as PathlessLayoutBucketsIndexRouteImport } from './../../routes/_pathlessLayout/buckets/index'
import { Route as PathlessLayoutAdminTokensIndexRouteImport } from './../../routes/_pathlessLayout/admin-tokens/index'
import { Route as PathlessLayoutBucketsIdRouteRouteImport } from './../../routes/_pathlessLayout/buckets/$id/route'
import { Route as PathlessLayoutBucketsIdIndexRouteImport } from './../../routes/_pathlessLayout/buckets/$id/index'
import { Route as PathlessLayoutBucketsIdBrowseRouteRouteImport } from './../../routes/_pathlessLayout/buckets/$id/browse/route'
import { Route as PathlessLayoutBucketsIdBrowseIndexRouteImport } from './../../routes/_pathlessLayout/buckets/$id/browse/index'

const PathlessLayoutRouteRoute = PathlessLayoutRouteRouteImport.update({
  id: '/_pathlessLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const PathlessLayoutIndexRoute = PathlessLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PathlessLayoutRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const PathlessLayoutKeysRouteRoute = PathlessLayoutKeysRouteRouteImport.update({
  id: '/keys',
  path: '/keys',
  getParentRoute: () => PathlessLayoutRouteRoute,
} as any)
const PathlessLayoutClusterRouteRoute =
  PathlessLayoutClusterRouteRouteImport.update({
    id: '/cluster',
    path: '/cluster',
    getParentRoute: () => PathlessLayoutRouteRoute,
  } as any)
const PathlessLayoutBucketsRouteRoute =
  PathlessLayoutBucketsRouteRouteImport.update({
    id: '/buckets',
    path: '/buckets',
    getParentRoute: () => PathlessLayoutRouteRoute,
  } as any)
const PathlessLayoutAdminTokensRouteRoute =
  PathlessLayoutAdminTokensRouteRouteImport.update({
    id: '/admin-tokens',
    path: '/admin-tokens',
    getParentRoute: () => PathlessLayoutRouteRoute,
  } as any)
const PathlessLayoutKeysIndexRoute = PathlessLayoutKeysIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PathlessLayoutKeysRouteRoute,
} as any)
const PathlessLayoutClusterIndexRoute =
  PathlessLayoutClusterIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => PathlessLayoutClusterRouteRoute,
  } as any)
const PathlessLayoutBucketsIndexRoute =
  PathlessLayoutBucketsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => PathlessLayoutBucketsRouteRoute,
  } as any)
const PathlessLayoutAdminTokensIndexRoute =
  PathlessLayoutAdminTokensIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => PathlessLayoutAdminTokensRouteRoute,
  } as any)
const PathlessLayoutBucketsIdRouteRoute =
  PathlessLayoutBucketsIdRouteRouteImport.update({
    id: '/$id',
    path: '/$id',
    getParentRoute: () => PathlessLayoutBucketsRouteRoute,
  } as any)
const PathlessLayoutBucketsIdIndexRoute =
  PathlessLayoutBucketsIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => PathlessLayoutBucketsIdRouteRoute,
  } as any)
const PathlessLayoutBucketsIdBrowseRouteRoute =
  PathlessLayoutBucketsIdBrowseRouteRouteImport.update({
    id: '/browse',
    path: '/browse',
    getParentRoute: () => PathlessLayoutBucketsIdRouteRoute,
  } as any)
const PathlessLayoutBucketsIdBrowseIndexRoute =
  PathlessLayoutBucketsIdBrowseIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => PathlessLayoutBucketsIdBrowseRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/admin-tokens': typeof PathlessLayoutAdminTokensRouteRouteWithChildren
  '/buckets': typeof PathlessLayoutBucketsRouteRouteWithChildren
  '/cluster': typeof PathlessLayoutClusterRouteRouteWithChildren
  '/keys': typeof PathlessLayoutKeysRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/': typeof PathlessLayoutIndexRoute
  '/buckets/$id': typeof PathlessLayoutBucketsIdRouteRouteWithChildren
  '/admin-tokens/': typeof PathlessLayoutAdminTokensIndexRoute
  '/buckets/': typeof PathlessLayoutBucketsIndexRoute
  '/cluster/': typeof PathlessLayoutClusterIndexRoute
  '/keys/': typeof PathlessLayoutKeysIndexRoute
  '/buckets/$id/browse': typeof PathlessLayoutBucketsIdBrowseRouteRouteWithChildren
  '/buckets/$id/': typeof PathlessLayoutBucketsIdIndexRoute
  '/buckets/$id/browse/': typeof PathlessLayoutBucketsIdBrowseIndexRoute
}
export interface FileRoutesByTo {
  '/auth/login': typeof AuthLoginRoute
  '/': typeof PathlessLayoutIndexRoute
  '/admin-tokens': typeof PathlessLayoutAdminTokensIndexRoute
  '/buckets': typeof PathlessLayoutBucketsIndexRoute
  '/cluster': typeof PathlessLayoutClusterIndexRoute
  '/keys': typeof PathlessLayoutKeysIndexRoute
  '/buckets/$id': typeof PathlessLayoutBucketsIdIndexRoute
  '/buckets/$id/browse': typeof PathlessLayoutBucketsIdBrowseIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_pathlessLayout': typeof PathlessLayoutRouteRouteWithChildren
  '/_pathlessLayout/admin-tokens': typeof PathlessLayoutAdminTokensRouteRouteWithChildren
  '/_pathlessLayout/buckets': typeof PathlessLayoutBucketsRouteRouteWithChildren
  '/_pathlessLayout/cluster': typeof PathlessLayoutClusterRouteRouteWithChildren
  '/_pathlessLayout/keys': typeof PathlessLayoutKeysRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/_pathlessLayout/': typeof PathlessLayoutIndexRoute
  '/_pathlessLayout/buckets/$id': typeof PathlessLayoutBucketsIdRouteRouteWithChildren
  '/_pathlessLayout/admin-tokens/': typeof PathlessLayoutAdminTokensIndexRoute
  '/_pathlessLayout/buckets/': typeof PathlessLayoutBucketsIndexRoute
  '/_pathlessLayout/cluster/': typeof PathlessLayoutClusterIndexRoute
  '/_pathlessLayout/keys/': typeof PathlessLayoutKeysIndexRoute
  '/_pathlessLayout/buckets/$id/browse': typeof PathlessLayoutBucketsIdBrowseRouteRouteWithChildren
  '/_pathlessLayout/buckets/$id/': typeof PathlessLayoutBucketsIdIndexRoute
  '/_pathlessLayout/buckets/$id/browse/': typeof PathlessLayoutBucketsIdBrowseIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/admin-tokens'
    | '/buckets'
    | '/cluster'
    | '/keys'
    | '/auth/login'
    | '/'
    | '/buckets/$id'
    | '/admin-tokens/'
    | '/buckets/'
    | '/cluster/'
    | '/keys/'
    | '/buckets/$id/browse'
    | '/buckets/$id/'
    | '/buckets/$id/browse/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth/login'
    | '/'
    | '/admin-tokens'
    | '/buckets'
    | '/cluster'
    | '/keys'
    | '/buckets/$id'
    | '/buckets/$id/browse'
  id:
    | '__root__'
    | '/_pathlessLayout'
    | '/_pathlessLayout/admin-tokens'
    | '/_pathlessLayout/buckets'
    | '/_pathlessLayout/cluster'
    | '/_pathlessLayout/keys'
    | '/auth/login'
    | '/_pathlessLayout/'
    | '/_pathlessLayout/buckets/$id'
    | '/_pathlessLayout/admin-tokens/'
    | '/_pathlessLayout/buckets/'
    | '/_pathlessLayout/cluster/'
    | '/_pathlessLayout/keys/'
    | '/_pathlessLayout/buckets/$id/browse'
    | '/_pathlessLayout/buckets/$id/'
    | '/_pathlessLayout/buckets/$id/browse/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  PathlessLayoutRouteRoute: typeof PathlessLayoutRouteRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_pathlessLayout': {
      id: '/_pathlessLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathlessLayoutRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_pathlessLayout/': {
      id: '/_pathlessLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PathlessLayoutIndexRouteImport
      parentRoute: typeof PathlessLayoutRouteRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_pathlessLayout/keys': {
      id: '/_pathlessLayout/keys'
      path: '/keys'
      fullPath: '/keys'
      preLoaderRoute: typeof PathlessLayoutKeysRouteRouteImport
      parentRoute: typeof PathlessLayoutRouteRoute
    }
    '/_pathlessLayout/cluster': {
      id: '/_pathlessLayout/cluster'
      path: '/cluster'
      fullPath: '/cluster'
      preLoaderRoute: typeof PathlessLayoutClusterRouteRouteImport
      parentRoute: typeof PathlessLayoutRouteRoute
    }
    '/_pathlessLayout/buckets': {
      id: '/_pathlessLayout/buckets'
      path: '/buckets'
      fullPath: '/buckets'
      preLoaderRoute: typeof PathlessLayoutBucketsRouteRouteImport
      parentRoute: typeof PathlessLayoutRouteRoute
    }
    '/_pathlessLayout/admin-tokens': {
      id: '/_pathlessLayout/admin-tokens'
      path: '/admin-tokens'
      fullPath: '/admin-tokens'
      preLoaderRoute: typeof PathlessLayoutAdminTokensRouteRouteImport
      parentRoute: typeof PathlessLayoutRouteRoute
    }
    '/_pathlessLayout/keys/': {
      id: '/_pathlessLayout/keys/'
      path: '/'
      fullPath: '/keys/'
      preLoaderRoute: typeof PathlessLayoutKeysIndexRouteImport
      parentRoute: typeof PathlessLayoutKeysRouteRoute
    }
    '/_pathlessLayout/cluster/': {
      id: '/_pathlessLayout/cluster/'
      path: '/'
      fullPath: '/cluster/'
      preLoaderRoute: typeof PathlessLayoutClusterIndexRouteImport
      parentRoute: typeof PathlessLayoutClusterRouteRoute
    }
    '/_pathlessLayout/buckets/': {
      id: '/_pathlessLayout/buckets/'
      path: '/'
      fullPath: '/buckets/'
      preLoaderRoute: typeof PathlessLayoutBucketsIndexRouteImport
      parentRoute: typeof PathlessLayoutBucketsRouteRoute
    }
    '/_pathlessLayout/admin-tokens/': {
      id: '/_pathlessLayout/admin-tokens/'
      path: '/'
      fullPath: '/admin-tokens/'
      preLoaderRoute: typeof PathlessLayoutAdminTokensIndexRouteImport
      parentRoute: typeof PathlessLayoutAdminTokensRouteRoute
    }
    '/_pathlessLayout/buckets/$id': {
      id: '/_pathlessLayout/buckets/$id'
      path: '/$id'
      fullPath: '/buckets/$id'
      preLoaderRoute: typeof PathlessLayoutBucketsIdRouteRouteImport
      parentRoute: typeof PathlessLayoutBucketsRouteRoute
    }
    '/_pathlessLayout/buckets/$id/': {
      id: '/_pathlessLayout/buckets/$id/'
      path: '/'
      fullPath: '/buckets/$id/'
      preLoaderRoute: typeof PathlessLayoutBucketsIdIndexRouteImport
      parentRoute: typeof PathlessLayoutBucketsIdRouteRoute
    }
    '/_pathlessLayout/buckets/$id/browse': {
      id: '/_pathlessLayout/buckets/$id/browse'
      path: '/browse'
      fullPath: '/buckets/$id/browse'
      preLoaderRoute: typeof PathlessLayoutBucketsIdBrowseRouteRouteImport
      parentRoute: typeof PathlessLayoutBucketsIdRouteRoute
    }
    '/_pathlessLayout/buckets/$id/browse/': {
      id: '/_pathlessLayout/buckets/$id/browse/'
      path: '/'
      fullPath: '/buckets/$id/browse/'
      preLoaderRoute: typeof PathlessLayoutBucketsIdBrowseIndexRouteImport
      parentRoute: typeof PathlessLayoutBucketsIdBrowseRouteRoute
    }
  }
}

interface PathlessLayoutAdminTokensRouteRouteChildren {
  PathlessLayoutAdminTokensIndexRoute: typeof PathlessLayoutAdminTokensIndexRoute
}

const PathlessLayoutAdminTokensRouteRouteChildren: PathlessLayoutAdminTokensRouteRouteChildren =
  {
    PathlessLayoutAdminTokensIndexRoute: PathlessLayoutAdminTokensIndexRoute,
  }

const PathlessLayoutAdminTokensRouteRouteWithChildren =
  PathlessLayoutAdminTokensRouteRoute._addFileChildren(
    PathlessLayoutAdminTokensRouteRouteChildren,
  )

interface PathlessLayoutBucketsIdBrowseRouteRouteChildren {
  PathlessLayoutBucketsIdBrowseIndexRoute: typeof PathlessLayoutBucketsIdBrowseIndexRoute
}

const PathlessLayoutBucketsIdBrowseRouteRouteChildren: PathlessLayoutBucketsIdBrowseRouteRouteChildren =
  {
    PathlessLayoutBucketsIdBrowseIndexRoute:
      PathlessLayoutBucketsIdBrowseIndexRoute,
  }

const PathlessLayoutBucketsIdBrowseRouteRouteWithChildren =
  PathlessLayoutBucketsIdBrowseRouteRoute._addFileChildren(
    PathlessLayoutBucketsIdBrowseRouteRouteChildren,
  )

interface PathlessLayoutBucketsIdRouteRouteChildren {
  PathlessLayoutBucketsIdBrowseRouteRoute: typeof PathlessLayoutBucketsIdBrowseRouteRouteWithChildren
  PathlessLayoutBucketsIdIndexRoute: typeof PathlessLayoutBucketsIdIndexRoute
}

const PathlessLayoutBucketsIdRouteRouteChildren: PathlessLayoutBucketsIdRouteRouteChildren =
  {
    PathlessLayoutBucketsIdBrowseRouteRoute:
      PathlessLayoutBucketsIdBrowseRouteRouteWithChildren,
    PathlessLayoutBucketsIdIndexRoute: PathlessLayoutBucketsIdIndexRoute,
  }

const PathlessLayoutBucketsIdRouteRouteWithChildren =
  PathlessLayoutBucketsIdRouteRoute._addFileChildren(
    PathlessLayoutBucketsIdRouteRouteChildren,
  )

interface PathlessLayoutBucketsRouteRouteChildren {
  PathlessLayoutBucketsIdRouteRoute: typeof PathlessLayoutBucketsIdRouteRouteWithChildren
  PathlessLayoutBucketsIndexRoute: typeof PathlessLayoutBucketsIndexRoute
}

const PathlessLayoutBucketsRouteRouteChildren: PathlessLayoutBucketsRouteRouteChildren =
  {
    PathlessLayoutBucketsIdRouteRoute:
      PathlessLayoutBucketsIdRouteRouteWithChildren,
    PathlessLayoutBucketsIndexRoute: PathlessLayoutBucketsIndexRoute,
  }

const PathlessLayoutBucketsRouteRouteWithChildren =
  PathlessLayoutBucketsRouteRoute._addFileChildren(
    PathlessLayoutBucketsRouteRouteChildren,
  )

interface PathlessLayoutClusterRouteRouteChildren {
  PathlessLayoutClusterIndexRoute: typeof PathlessLayoutClusterIndexRoute
}

const PathlessLayoutClusterRouteRouteChildren: PathlessLayoutClusterRouteRouteChildren =
  {
    PathlessLayoutClusterIndexRoute: PathlessLayoutClusterIndexRoute,
  }

const PathlessLayoutClusterRouteRouteWithChildren =
  PathlessLayoutClusterRouteRoute._addFileChildren(
    PathlessLayoutClusterRouteRouteChildren,
  )

interface PathlessLayoutKeysRouteRouteChildren {
  PathlessLayoutKeysIndexRoute: typeof PathlessLayoutKeysIndexRoute
}

const PathlessLayoutKeysRouteRouteChildren: PathlessLayoutKeysRouteRouteChildren =
  {
    PathlessLayoutKeysIndexRoute: PathlessLayoutKeysIndexRoute,
  }

const PathlessLayoutKeysRouteRouteWithChildren =
  PathlessLayoutKeysRouteRoute._addFileChildren(
    PathlessLayoutKeysRouteRouteChildren,
  )

interface PathlessLayoutRouteRouteChildren {
  PathlessLayoutAdminTokensRouteRoute: typeof PathlessLayoutAdminTokensRouteRouteWithChildren
  PathlessLayoutBucketsRouteRoute: typeof PathlessLayoutBucketsRouteRouteWithChildren
  PathlessLayoutClusterRouteRoute: typeof PathlessLayoutClusterRouteRouteWithChildren
  PathlessLayoutKeysRouteRoute: typeof PathlessLayoutKeysRouteRouteWithChildren
  PathlessLayoutIndexRoute: typeof PathlessLayoutIndexRoute
}

const PathlessLayoutRouteRouteChildren: PathlessLayoutRouteRouteChildren = {
  PathlessLayoutAdminTokensRouteRoute:
    PathlessLayoutAdminTokensRouteRouteWithChildren,
  PathlessLayoutBucketsRouteRoute: PathlessLayoutBucketsRouteRouteWithChildren,
  PathlessLayoutClusterRouteRoute: PathlessLayoutClusterRouteRouteWithChildren,
  PathlessLayoutKeysRouteRoute: PathlessLayoutKeysRouteRouteWithChildren,
  PathlessLayoutIndexRoute: PathlessLayoutIndexRoute,
}

const PathlessLayoutRouteRouteWithChildren =
  PathlessLayoutRouteRoute._addFileChildren(PathlessLayoutRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  PathlessLayoutRouteRoute: PathlessLayoutRouteRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
